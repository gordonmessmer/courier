name: Run builds on supported distributions

on:
  push:
  pull_request:

jobs:
  make_dist:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.release[0] }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          ${{ matrix.release[1] }}

      - name: Get courier-libs
        run: |
          ${{ matrix.release[2] }}
          git clone https://github.com/svarshavchik/courier-libs.git libs
          cp -al libs/unicode courier-unicode && ln -sf ../libs/common/autobloat courier-unicode # Treat unicode like a top-level project
          cp -al libs sysconftool
          cp -al libs courier-authlib
          if [[ ${{ matrix.project }} == sysconftool || ${{ matrix.project }} == courier-authlib || ${{ matrix.project }} == courier-unicode ]] ; then exit 0 ; fi # No need for more copying
          cp -al libs ${{ matrix.project }}

      - name: Build sysconftool
        run: |
          ${{ matrix.release[2] }}
          cd sysconftool
          sh ./autobloat
          ./configure
          make
          make install
          make check
          make dist

      - name: Build courier-unicode
        run: |
          ${{ matrix.release[2] }}
          cd courier-unicode
          sh ./autobloat
          ./configure
          make
          make install
          make check
          make dist
          echo /usr/local/lib > /etc/ld.so.conf.d/local.conf
          echo /usr/local/lib64 >> /etc/ld.so.conf.d/local.conf
          ldconfig

      - name: Build courier-authlib
        run: |
          ${{ matrix.release[2] }}
          cd courier-authlib
          env ACLOCAL_PATH=/usr/local/share/aclocal sh ./autobloat
          ./configure
          make
          make install
          make check
          make dist

      - name: Build ${{ matrix.project }} dist
        run: |
          ${{ matrix.release[2] }}
          if [[ ${{ matrix.project }} == sysconftool || ${{ matrix.project }} == courier-authlib || ${{ matrix.project }} == courier-unicode ]] ; then exit 0 ; fi # Already done
          cd ${{ matrix.project }}
          env ACLOCAL_PATH=/usr/local/share/aclocal sh ./autobloat
          ./configure --with-notice=unicode --disable-root-check
          make
          make install
          # "courier" requires an additional step
          if test "${{ matrix.project }}" == courier ; then make install-configure ; fi
          make check
          make dist

      - name: Upload dist for ${{ matrix.project }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project }}
          path: "${{ matrix.project }}/*.tar.bz2"

    strategy:
      matrix:
        # release: container image name, container preparation command, step preparation command
        release: [["fedora:latest", "dnf install -y --setopt=install_weak_deps=false --setopt=tsflags=nodocs --setopt=deltarpm=false --disablerepo=*modular aspell-devel autoconf automake bzip2 docbook-style-xsl elinks /etc/mime.types expect gawk gcc-c++ gdbm-devel gettext-devel ghostscript git gnupg2 groff httpd libidn-devel libtool libtool-ltdl-devel libxml2-devel libxslt make mgetty-sendfax ncurses-devel netpbm-progs openldap-devel openssl-devel openssl-perl pam-devel pcre2-devel pcre-devel perl 'perl(ExtUtils::Embed)' perl-generators procps-ng sed tidy /usr/lib/locale/locale-archive wget which zlib-devel", "eval $(rpm --eval '%{set_build_flags}')"],
                 ]
        project: ["cone",
                  "courier-analog",
                  "courier-authlib",
                  "courier-imap",
                  "courier-sox",
                  "courier-unicode",
                  "courier",
                  "maildrop",
                  "sqwebmail",
                  "sysconftool",
                 ]

  build_dist:
    needs: make_dist
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.release[0] }}
    steps:
      - name: Download sysconftool
        uses: actions/download-artifact@v2
        with:
          name: sysconftool

      - name: Download courier-unicode
        uses: actions/download-artifact@v2
        with:
          name: courier-unicode

      - name: Download courier-authlib
        uses: actions/download-artifact@v2
        with:
          name: courier-authlib

      - name: Download ${{ matrix.project }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.project }}

      - name: Install dependencies
        run: |
          ${{ matrix.release[1] }}

      - name: Build sysconftool
        run: |
          ${{ matrix.release[2] }}
          mkdir build
          pushd build
          tar xf ../sysconftool*.tar.bz2
          pushd *
          ./configure
          make
          make install
          make check
          popd
          popd
          rm -rf build
          rm sysconftool*.tar.bz2

      - name: Build courier-unicode
        run: |
          ${{ matrix.release[2] }}
          mkdir build
          pushd build
          tar xf ../courier-unicode*.tar.bz2
          pushd *
          ./configure
          make
          make install
          make check
          echo /usr/local/lib > /etc/ld.so.conf.d/local.conf
          echo /usr/local/lib64 >> /etc/ld.so.conf.d/local.conf
          ldconfig
          popd
          popd
          rm -rf build
          rm courier-unicode*.tar.bz2

      - name: Build courier-authlib
        run: |
          ${{ matrix.release[2] }}
          mkdir build
          pushd build
          tar xf ../courier-authlib*.tar.bz2
          pushd *
          ./configure
          make
          make install
          make check
          popd
          popd
          rm -rf build
          rm courier-authlib*.tar.bz2

      - name: Build ${{ matrix.project }}
        run: |
          ${{ matrix.release[2] }}
          mkdir build
          pushd build
          tar xf ../${{ matrix.project }}*.tar.bz2
          pushd *
          ./configure --with-notice=unicode --disable-root-check
          make
          make install
          # "courier" requires an additional step
          if test "${{ matrix.project }}" == courier ; then make install-configure ; fi
          make check
          popd
          popd
          rm -rf build

    strategy:
      matrix:
        # release: container image name, container preparation command, step preparation command
        release: [
                  ["centos:7", "yum install -y epel-release ; yum install -y epel-rpm-macros ; yum install -y --setopt=tsflags=nodocs aspell-devel automake /etc/mime.types expect gawk gcc-c++ gdbm-devel gettext-devel ghostscript gnupg2 groff httpd libidn-devel libtool libtool-ltdl-devel libxml2-devel libxslt make mgetty-sendfax ncurses-devel netpbm-progs openldap-devel openssl-devel openssl-perl pam-devel pcre2-devel pcre-devel perl 'perl(ExtUtils::Embed)' perl-generators procps-ng sed /usr/lib/locale/locale-archive wget which zlib-devel", "rpm --eval '%{set_build_flags}'; eval $(rpm --eval '%{set_build_flags}')"],
                  ["archlinux:latest", "pacman -Sy aspell automake apache binutils coreutils diffutils expect gawk gcc gdbm ghostscript gnupg groff gzip hylafax libidn libtool libxml2 mailcap make mariadb ncurses netpbm openldap openssl pam pcre pcre2 perl pkgconfig postgresql procps-ng sed sqlite wget zlib zlib --noconfirm; mkdir -p /var/www/cgi-bin /var/www/html", "source /etc/makepkg.conf; export $(egrep '^[[:alnum:]_]+=' /etc/makepkg.conf | cut -f1 -d=)"],
                 ]
        project: ["cone",
                  "courier-analog",
                  "courier-imap",
                  "courier-sox",
                  "courier",
                  "maildrop",
                  "sqwebmail",
                 ]
